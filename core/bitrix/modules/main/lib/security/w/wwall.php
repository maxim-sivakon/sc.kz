<? namespace Bitrix\Main\Security\W;$GLOBALS['____1433133637']= array(base64_decode(''.'d'.'GltZ'.'Q'.'='.'='),base64_decode('dGltZQ=='),base64_decode(''.'anNvbl9kZ'.'WNvZGU='),base64_decode('YXJyYXlfbWVyZ2U='),base64_decode('am9pbg'.'=='),base64_decode('am9'.'pbg=='),base64_decode(''.'am'.'9pbg'.'=='),base64_decode('Y'.'X'.'J'.'y'.'YXlfcG9w'),base64_decode(''.'YXJ'.'yYX'.'lfc2'.'hpZnQ='),base64_decode('Y'.'XJy'.'YX'.'lfc2h'.'pZ'.'nQ='),base64_decode('YXJyY'.'Xlfc2hpZnQ='),base64_decode(''.'Y'.'XJyYXlf'.'c'.'2hpZn'.'Q='),base64_decode('YXJyYXlfbWV'.'yZ'.'2U'.'='),base64_decode('a'.'XNf'.'YX'.'JyY'.'Xk='),base64_decode('YXJyYX'.'lfbWVyZ2U='),base64_decode('aW5fYXJ'.'y'.'YXk'.'='),base64_decode(''.'aW5fYXJyYXk='),base64_decode(''.'aW5fYX'.'Jy'.'YXk'.'='),base64_decode('aW5fYXJy'.'YXk='),base64_decode('aW'.'5fYXJyYXk'.'='),base64_decode('dGltZQ=='),base64_decode('dGltZQ=='),base64_decode('YXJ'.'yYX'.'lfbWFw'),base64_decode('Z2V0X'.'2xvY'.'WRlZF9leHRl'.'bnNp'.'b25'.'z'),base64_decode('anNvb'.'l9lbmNvZGU='),base64_decode('anN'.'vbl9'.'lbmN'.'vZG'.'U='),base64_decode('cGhwd'.'mV'.'yc2lv'.'bg=='),base64_decode(''.'anNvbl9l'.'bm'.'Nv'.'ZGU='),base64_decode('am9pbg'.'=='));if(!function_exists(__NAMESPACE__.'\\___1648774236')){function ___1648774236($_1103963272){static $_1695873223= false; if($_1695873223 == false) $_1695873223=array(''.'V1dBTExfT'.'E9DSw==','c2VjdXJ'.'pdHk=',''.'Y2F'.'jaGU=','dH'.'Rs','R'.'EF'.'UQ'.'Q==','eyI=','V1dBTE'.'xfTE9'.'DSw'.'='.'=','c2VjdX'.'JpdHk=','U0VDVVJJ'.'VFlfV'.'1dBT'.'ExfRV'.'hDRVBUS'.'U9O','Rk'.'FJ'.'T'.'F9'.'DSEVD'.'S'.'0lOR'.'w='.'=','Q2FuIG5vdCBleGV'.'j'.'dXRlIHd3'.'YWxsIHJ1bGVzOi'.'A=','I'.'F'.'RyYW'.'NlO'.'i'.'A=',''.'UkV'.'RVUV'.'TVF9VUkk=','a'.'2V'.'5'.'cw==','dm'.'FsdWV'.'z','U'.'0VDVVJJV'.'FlfV'.'1dBTE'.'xfTU9ESUZZ','Lg'.'='.'=','U'.'0V'.'DVV'.'JJVFlfV1dBTExfVU5TRVQ=',''.'Lg'.'==','U0VDVVJJVFlfV'.'1'.'dBTE'.'xfRV'.'hJVA==','Lg==','Z2'.'x'.'v'.'YmFs','a2V5cw='.'=','dmFsdW'.'Vz','Z2V0','Z2'.'V0','cG'.'9z'.'dA==','cG9zdA==','Y'.'2'.'9va2ll','Y2'.'9va2'.'ll','cmVxdW'.'Vzd'.'A==',''.'cmVx'.'dWVzdA==','Z2xv'.'YmFs','Z'.'2'.'xvYmFs',''.'bWF'.'pbl9'.'zZW'.'M=','V'.'1'.'dBTExfQUNU'.'VU'.'FMSVpFX1J'.'VT'.'EV'.'T','dg='.'=','d'.'mVyc2lvbg==','a'.'Q==','aX'.'NJbnN0'.'YW'.'xsZW'.'Q=',''.'d'.'g==','a'.'W'.'5'.'p','c29ja2V0V'.'GltZ'.'W'.'9'.'1'.'d'.'A==',''.'c'.'3'.'RyZWFtVGltZW'.'91dA==','KCc=','ZGF0YQ==','JywgJw==','bW9k'.'dW'.'xl','JywgJw==','bW9kdWxl'.'X3Z'.'l'.'cnN'.'pb24=','J'.'yk=',''.'L'.'CA=','U0VD'.'VVJ'.'JVFlfV1d'.'BTExf'.'RVhDRV'.'BUSU'.'9'.'O','bWF'.'p'.'b'.'g'.'==','Rk'.'FJTF9SRUZ'.'SRV'.'NISU5H','Q2FuIG5'.'vdCByZWZy'.'Z'.'XNoIHd3'.'YWxsIHJ1bGVz'.'OiA=','I'.'FRy'.'YWNlOiA'.'=','ZGF0YQ'.'='.'=','eyI=','L'.'S0tLS1C'.'RUdJT'.'iB'.'QVUJM'.'SUMgS0VZLS0tL'.'S0=','Ck1JS'.'UJ'.'J'.'akF'.'O'.'QmdrcWh'.'raU'.'c5d'.'z'.'BCQVF'.'FRkFBT'.'0'.'NBUThBTUlJQkNnS0NBUUVBc'.'ThRR'.'T'.'BIa'.'m1ISlV'.'T'.'dFdW'.'Nm4wemEK'.'U'.'l'.'ZvTH'.'g'.'wMkt6YmZyYlMvU'.'DZzV2'.'F4V'.'Hp3OF'.'N'.'l'.'R1'.'R'.'0YlRDT3JwS'.'Gk1UUY2'.'T1J5'.'a'.'lo'.'v'.'WHh'.'6L0'.'tM'.'V'.'T'.'FH'.'Ym9mOUNaMwo0ejdTa3'.'F'.'VdD'.'Y2aWJYdk9'.'G'.'Qn'.'g0Z'.'n'.'c'.'vQVBQUk'.'dEc'.'XRtMG5EM2'.'ZnR'.'3'.'N1M1'.'JlUGd'.'3MjlpOCt'.'2bTdtdE'.'JLSlVZbDRyClZwYj'.'ZzZlp'.'FVDlL'.'R'.'WI'.'2'.'VDFIRF'.'ltRXZjMWhxL2lpdX'.'l4T'.'H'.'JaWmk1UT'.'ZV'.'Z'.'mY0V'.'UV'.'2VEkrNjhzc'.'0ZS'.'a1Erb3dU'.'UnkKZU9JTWJGaE0vVV'.'RtZlZZYlRSR'.'nk'.'yb1VROFdNemEybko1'.'U2FoemkxVUtPMWpB'.'alhUUFJ'.'yemM3'.'QW'.'p1'.'NjM5aj'.'FPMAp'.'wcH'.'F'.'m'.'bTV'.'4Z'.'1'.'dsRkF'.'K'.'a0hRVGdiZGQ1Q'.'V'.'dx'.'R'.'EZRa3Q'.'5SEtrWSt'.'UbmZ'.'C'.'TEdWT'.'XZ'.'WeVB3VEhOV1FZQX'.'c0eHBnL3dBC'.'lp3SURBUUFC'.'C'.'i'.'0tLS0t'.'RU5EIF'.'BVQk'.'x'.'JQ'.'yBL'.'RVk'.'tLS0tLQ==');return base64_decode($_1695873223[$_1103963272]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_339537776= 'https://wwall.bitrix.info/rules.php'; protected $_331521664= true; public function handle(){ try{  $_899456260= Cache::createInstance(); $_261351451= false; if($_899456260->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1267486403= $_899456260->getVars(); if($GLOBALS['____1433133637'][0]()- $_1267486403> round(0+10+10)){  $_1159463566= Application::getConnection(); $_2133128088= RuleRecordTable::getTableName(); $_1159463566->truncateTable($_2133128088); RuleRecordTable::cleanCache(); $_899456260->clean(___1648774236(0), ___1648774236(1));}} elseif($_899456260->startDataCache()){  $_899456260->endDataCache($GLOBALS['____1433133637'][1]()); $_261351451= true;}  $_1894310742= RuleRecordTable::getList([ ___1648774236(2) =>[___1648774236(3) => round(0+3600)* round(0+6+6+6+6)* round(0+3.5+3.5)]])->fetchAll(); foreach($_1894310742 as $_1867367387){ $_1169686062= new PublicKeyCipher; $_2064582232= $_1169686062->decrypt($_1867367387[___1648774236(4)], static::__1330959639()); if(!str_starts_with($_2064582232, ___1648774236(5))){ continue;} $_377401763= $GLOBALS['____1433133637'][2]($_2064582232, true); if(!empty($_377401763)){ $_561152700= Rule::make($_377401763); $_1799686402= $this->handleRule($_561152700); $this->applyHandlingResults($_1799686402);}}  if($_261351451){ $_899456260->clean(___1648774236(6), ___1648774236(7));}} catch(\Throwable $_1761926820){ $this->logEvent( ___1648774236(8), ___1648774236(9), ___1648774236(10). $_1761926820->getMessage(). ___1648774236(11). $_1761926820->getTraceAsString());}}  public function handleRule(Rule $_561152700): array{ $_1799686402=[]; if($_561152700->matchPath($_SERVER[___1648774236(12)])){  $_1302044230= $this->getContextElements($_561152700->getContext()); foreach($_1302044230 as $_303031041 => &$_802837251){ $_1799686402= $GLOBALS['____1433133637'][3]($_1799686402, $this->recursiveContextKeyHandle($_303031041, $_802837251,[], $_561152700));}} return $_1799686402;}  public function applyHandlingResults(array $_1799686402){ $_1302044230= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_1799686402 as $_681996780){ $_802837251=& $_1302044230[$_681996780->getContextName()]; $_1954723150= $_681996780->getRuleResult(); $_561152700= $_681996780->getRule(); if($_1954723150 instanceof ModifyResult){ if($_561152700->getProcess() === ___1648774236(13)){  static::rewriteContextKey( $_681996780->getContextName(), $_802837251, $_681996780->getContextKey(), $_1954723150->getCleanValue());} elseif($_561152700->getProcess() === ___1648774236(14)){ static::rewriteContextValue( $_681996780->getContextName(), $_802837251, $_681996780->getContextKey(), $_1954723150->getCleanValue());} $this->logEvent( ___1648774236(15), $_681996780->getContextName(), $GLOBALS['____1433133637'][4](___1648774236(16), $_681996780->getContextKey()));} elseif($_1954723150 instanceof CheckResult &&!$_1954723150->isSuccess()){ if($_1954723150->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_681996780->getContextName(), $_802837251, $_681996780->getContextKey(),); $this->logEvent( ___1648774236(17), $_681996780->getContextName(), $GLOBALS['____1433133637'][5](___1648774236(18), $_681996780->getContextKey()));} elseif($_1954723150->getAction() === RuleAction::EXIT){ $this->logEvent( ___1648774236(19), $_681996780->getContextName(), $GLOBALS['____1433133637'][6](___1648774236(20), $_681996780->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_331521664= false;} protected function rewriteContextKey($_303031041, &$_802837251, $_193381718, $_1641901479){ $_1078394240= $_193381718;  $GLOBALS['____1433133637'][7]($_1078394240); $_1078394240[]= $_1641901479; if($_303031041 === ___1648774236(21)){ $_21254032= $GLOBALS['____1433133637'][8]($_193381718); $GLOBALS['____1433133637'][9]($_1078394240); if(empty($_193381718)){ $GLOBALS[$_1641901479]= $GLOBALS[$_21254032]; unset($GLOBALS[$_21254032]);} else{ $_802837251=& $GLOBALS[$_21254032]; $_785710061= ArrayHelper::getByNestedKey($_802837251, $_193381718);  ArrayHelper::setByNestedKey($_802837251, $_1078394240, $_785710061);  ArrayHelper::unsetByNestedKey($_802837251, $_193381718);}} else{ $_785710061= ArrayHelper::getByNestedKey($_802837251, $_193381718);  ArrayHelper::setByNestedKey($_802837251, $_1078394240, $_785710061);  ArrayHelper::unsetByNestedKey($_802837251, $_193381718);}} protected function rewriteContextValue($_303031041, &$_802837251, $_1285050034, $_785710061){ if($_303031041 === 'global'){ $_21254032= $GLOBALS['____1433133637'][10]($_1285050034); if(empty($_1285050034)){ $GLOBALS[$_21254032]= $_785710061;} else{ $_802837251=& $GLOBALS[$_21254032]; ArrayHelper::setByNestedKey($_802837251, $_1285050034, $_785710061);}} else{  ArrayHelper::setByNestedKey($_802837251, $_1285050034, $_785710061);}} protected function unsetContextValue($_303031041, &$_802837251, $_1285050034){ if($_303031041 === 'global'){ $_21254032= $GLOBALS['____1433133637'][11]($_1285050034); if(empty($_1285050034)){ unset($GLOBALS[$_21254032]);} else{ $_802837251=& $GLOBALS[$_21254032]; ArrayHelper::unsetByNestedKey($_802837251, $_1285050034);}} else{ ArrayHelper::unsetByNestedKey($_802837251, $_1285050034);}}  protected function recursiveContextKeyHandle(string $_303031041, array &$_802837251, array $_1353549433, Rule $_561152700): array{  $_1799686402=[]; foreach($_802837251 as $_749737611 => $_785710061){ $_1285050034= $GLOBALS['____1433133637'][12]($_1353549433,[$_749737611]); if($_561152700->matchKey($_1285050034)){  if($_561152700->getProcess() === ___1648774236(22)){ $_1954723150= $_561152700->evaluate($_749737611);} elseif($_561152700->getProcess() === ___1648774236(23)){ $_1954723150= $_561152700->evaluateValue($_785710061);}  if(!empty($_1954723150) && $_1954723150 instanceof RuleResult){ $_1799686402[]= new HandlingResult($_303031041, $_1285050034, $_1954723150, $_561152700);}}  if($GLOBALS['____1433133637'][13]($_785710061)){ $_1799686402= $GLOBALS['____1433133637'][14]($_1799686402, $this->recursiveContextKeyHandle( $_303031041, $_802837251[$_749737611], $_1285050034, $_561152700));}} return $_1799686402;} protected function getContextElements(array $_1244295645){ $_1938769911=[]; if($GLOBALS['____1433133637'][15](___1648774236(24), $_1244295645, true)){ $_1938769911[___1648774236(25)]= &$_GET;} if($GLOBALS['____1433133637'][16](___1648774236(26), $_1244295645, true)){ $_1938769911[___1648774236(27)]= &$_POST;} if($GLOBALS['____1433133637'][17](___1648774236(28), $_1244295645, true)){ $_1938769911[___1648774236(29)]= &$_COOKIE;} if($GLOBALS['____1433133637'][18](___1648774236(30), $_1244295645, true)){ $_1938769911[___1648774236(31)]= &$_REQUEST;} if($GLOBALS['____1433133637'][19](___1648774236(32), $_1244295645, true)){ $_1938769911[___1648774236(33)]= $GLOBALS;} return $_1938769911;} public static function refreshRules(){ try{ $_1034361493= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1433133637'][20]()- $_1034361493)< static::CACHE_RULES_TTL){ return;} Option::set(___1648774236(34), ___1648774236(35), $GLOBALS['____1433133637'][21]()); $_820507476= null;  $_259760785= $GLOBALS['____1433133637'][22](function($_924132613){ return[___1648774236(36) => $_924132613[___1648774236(37)], ___1648774236(38) => (int) $_924132613[___1648774236(39)]];}, ModuleManager::getModulesFromDisk());  $_480804378=[]; foreach($GLOBALS['____1433133637'][23]() as $_1682639416){ $_1912648098= new ReflectionExtension($_1682639416); $_480804378[$_1682639416]=[ ___1648774236(40) => $_1912648098->getVersion(), ___1648774236(41) => $_1912648098->getINIEntries()];}  $_1717870696= new HttpClient([ ___1648774236(42) => round(0+1+1+1+1+1), ___1648774236(43) => round(0+1+1+1+1+1)]); $_1187559681= $_1717870696->post( static::$_339537776,[ 'modules' => $GLOBALS['____1433133637'][24]($_259760785), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____1433133637'][25]([ 'v' => $GLOBALS['____1433133637'][26](), 'ext' => $_480804378]),]); if($_1717870696->getStatus() == round(0+50+50+50+50) &&!empty($_1187559681)){ $_820507476= Json::decode($_1187559681);}  if($_820507476 !== null){ $_1159463566= Application::getConnection(); $_2133128088= RuleRecordTable::getTableName(); if(!empty($_820507476)){ foreach($_820507476 as $_332371459){ if(!static::checkRuleSign($_332371459)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1433133637'][27]($_332371459));}}}  $_1159463566->truncateTable($_2133128088);  if(!empty($_820507476)){ $_922028468=[]; foreach($_820507476 as $_332371459){ $_922028468[]= ___1648774236(44). $_1159463566->getSqlHelper()->forSql($_332371459[___1648774236(45)]). ___1648774236(46). $_1159463566->getSqlHelper()->forSql($_332371459[___1648774236(47)]). ___1648774236(48). $_1159463566->getSqlHelper()->forSql($_332371459[___1648774236(49)]). ___1648774236(50);} $_2054191839= $GLOBALS['____1433133637'][28](___1648774236(51), $_922028468);  $_1159463566->query("INSERT INTO {$_2133128088} (DATA, MODULE, MODULE_VERSION) VALUES {$_2054191839}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1761926820){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___1648774236(52), ___1648774236(53), ___1648774236(54), ___1648774236(55). $_1761926820->getMessage(). ___1648774236(56). $_1761926820->getTraceAsString());}} protected static function checkRuleSign($_561152700){ $_1169686062= new PublicKeyCipher; $_377401763= $_1169686062->decrypt($_561152700[___1648774236(57)], static::__1330959639()); return str_starts_with($_377401763, ___1648774236(58));} private static function __1330959639(){ $_496368321= ''; $_496368321 .= ___1648774236(59); $_496368321 .= ___1648774236(60); return $_496368321;} protected function logEvent($_1607892974, $_1973308535, $_1541413320){ if($this->_331521664){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1607892974, 'main', $_1973308535, $_1541413320);}}}?>